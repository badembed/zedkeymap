// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Workspace",
    "bindings": {
      // "shift shift": "file_finder::Toggle"
      "cmd-]": "theme_selector::Toggle",
      "space f": "file_finder::Toggle"
    }
  },

  {
    "context": "Editor && vim_mode == normal && (vim_operator == none || vim_operator == n) && !VimWaiting",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      "f d": "editor::GoToDefinition",
      "f r": "editor::FindAllReferences",
      "f b": "pane::GoBack",
      "s": "workspace::Save"
    }
  },

  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "space j": "outline::Toggle",
      "space r": "editor::FindAllReferences",
      "space d": "editor::GoToDefinition",
      "space b": "pane::GoBack",
      "space f": "file_finder::Toggle",
      "space w v": "pane::SplitRight",
      "space w s": "pane::SplitDown",
      "space w d": "pane::CloseActiveItem",
      "space p": "projects::OpenRecent",
      "space s": "pane::DeploySearch",
      "space '": "terminal_panel::ToggleFocus",
      "space t": "workspace::ToggleLeftDock",
      "space ;": "terminal_panel::ToggleFocus",
      "space a": "assistant::ToggleFocus"
      //"w": "workspace::Save"
    }
  },

  {
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "ctrl-down": "vim::EndOfParagraph",
      "ctrl-up": "vim::StartOfParagraph",
      "cmd-right": "vim::EndOfLine",
      "cmd-left": "vim::StartOfLine",
      "ctrl-right": "vim::NextWordEnd",
      "ctrl-left": "vim::PreviousWordStart",
      "alt-right": "vim::NextWordEnd",
      "alt-left": "vim::PreviousWordStart",
      "space c": ["editor::ToggleComments", { "advance_downwards": false }],
      "c c": ["editor::ToggleComments", { "advance_downwards": false }]
    }
  },

  {
    "context": "Editor && vim_mode != visual",
    "bindings": {
      "ctrl-left": "editor::MoveToPreviousWordStart",
      "ctrl-right": "editor::MoveToNextWordEnd"
    }
  },

  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "space t": "workspace::ToggleLeftDock",
      "enter": "project_panel::Open"
    }
  },

  {
    "context": "Editor",
    "bindings": {
      // "j k": ["workspace::SendKeystrokes", "escape"]
      "cmd-d": "editor::DeleteLine",
      "ctrl-shift-left": "editor::SelectToPreviousWordStart", // cursorWordLeftSelect
      "ctrl-shift-right": "editor::SelectToNextWordEnd", // cursorWordRightSelect
      "cmd-m": ["task::Spawn", { "task_name": "make" }],
      "cmd-e": ["task::Spawn", { "task_name": "run" }],
      "alt-up": "editor::MoveToStartOfParagraph",
      "alt-down": "editor::MoveToEndOfParagraph",
      "ctrl-x": "editor::Cut",
      "ctrl-c": "editor::Copy",
      "ctrl-v": "editor::Paste",
      "cmd-t": "terminal_panel::ToggleFocus",
      "cmd-;": "terminal_panel::ToggleFocus",
      "cmd-]": "theme_selector::Toggle",
      "alt-shift-up": "editor::SelectToStartOfParagraph",
      "alt-shift-down": "editor::SelectToEndOfParagraph",

      "alt-x": "editor::Cut",
      "alt-c": "editor::Copy",
      "alt-v": "editor::Paste",
      "alt-z": "editor::Undo",
      "alt-shift-z": "editor::Redo"
      //"f2": "workspace::Save"
    }
  },

  {
    "context": "Editor && mode == full",
    "bindings": {
      "cmd-j": "outline::Toggle",
      "cmd-l": "go_to_line::Toggle"
    }
  },

  {
    "context": "Pane",
    "use_key_equivalents": true,
    "bindings": {
      "space 1": ["pane::ActivateItem", 0],
      "space 2": ["pane::ActivateItem", 1],
      "space 3": ["pane::ActivateItem", 2],
      "space 4": ["pane::ActivateItem", 3],
      "space 5": ["pane::ActivateItem", 4],
      "space 6": ["pane::ActivateItem", 5],
      "space 7": ["pane::ActivateItem", 6],
      "space 8": ["pane::ActivateItem", 7],
      "space 9": ["pane::ActivateItem", 8],
      "space 0": "pane::ActivateLastItem"
    }
  }
]
